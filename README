#################################################
#    PACK OF SCRIPTS FOR ORIGAMI SIMULATIONs    #
#################################################

Required input data:

    cadnano origami structure (e.g. 'origami.json')

Optional input:

    staple sequences (e.q. 'oligs.csv', cadnano export format)
    scaffold sequence (e.q. 'seq.txt')

Required software:
    python 2.7,
    gromacs,
    COSM force field

#################################################

General workflow:

1. Converting json cadnano file to COSM pdb structure ('json2cosm.py')

2. Energy minimisation and molecular dynamics

3. Converting final structure to fullatom ('cosm2full.py') -- in progress

##################################################

Example bash script with workflow: 'Examples/WF.sh'
Examples of input,intermediate and output formats: 'Examples/*'

##################################################
Detailed description.

########
1. 'json2cosm.py'

Converting json to COSM pdb. 
No pymol required 

###

    Usage:
        python json2cosm.py -i JSON -o PDB -t TOPOLOGY -r RESTRAINTS -l LATTICE [--seq SCAFFOLD --oligs STAPLES]

    Arguments:
        -i, --input 
                    input cadnano structure
        -o, --output
                    output COSM pdb
        -t, --top
                    output 'topology' file, is required for fullatom conversion
        -r, --restr
                    output file with distance/angle restraints, is required for simulation
        -l, --lattice
                    hexagonal or square
        --seq
                    input text file with scaffold sequenes; requires --oligs
        --oligs
                    input csv file with staple sequences; requires --seq
        
    Usage examples: 

    Convert origami.json to COSM cosm.pdb without define sequence, hexagonal lattice:
        python json2cosm.py -i origami.json -o cosm.pdb -t origami_t -r origami_r -l hex
    Convert origami.json to COSM cosm.pdb with define sequence, square lattice:
        python json2cosm.py -i origami.json -o cosm.pdb -t origami_t -r origami_r -l sq --seq seq.txt --oligs oligs.csv

########
2. Energy minimisation and molecular dynamics

cosm.ff/cosm8.ff with minl.mdp and min-implicit.mdp required
for hexagonal lattice use cosm.ff, for square - cosm8.ff

Input:

    COSM pdb (e.q. cosm.pdb)
    restraints file (generated in the first step, e.q. origami_r)

Example (hexagonal lattice):

    pdb2gmx -f cosm.pdb -o beg.gro -merge all -ff cosm -water none
    awk '/; Include Position restraint file/{print "#include  \"origami_t\"}' topol.top > topol_tmp
    mv topol_tmp topol.top
    grompp -i cosm.ff/minl.mdp -c beg -o em -p topol
    mdrun -deffnm em -v
    grompp -i cosm.ff/min-implicit.mdp -c em -o em2 -p topol
    mdrun -deffnm em2 -v -pd
    grompp -f cosm.ff/md-vacuum.mdp -c em2 -o md -p topol
    mdrun -deffnm md -v

Default md: 
    20 ns, step 0.02 ps

#########

4. 'cosm2full.py'
Converting cosm to fullatom structure.

###

Usage:
    python cosm2full.py -i COSM -o FULL -a TOPOLOGY -l LATTICE -p CG RATIO

[sequence]

--- testing in progress ---

######################################
